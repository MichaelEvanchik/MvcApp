@model IEnumerable<web.Models.transactionView>

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    foreach (var item in Model)
    {
       
    <div class="form-horizontal">
        <h4>transaction</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
   

        <div class="form-group">
            @Html.LabelFor(model => item.category_name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Categories", item.categories, new { htmlAttributes = new { @class = "form-control" } })
               @Html.HiddenFor(model => item.id)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => item.sub_category_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => item.sub_category_id, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => item.sub_category_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => item.object_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Objects", item.objects, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => item.events_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Events", item.events, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => item.score, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => item.score, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => item.score, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => item.user_profile_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => item.user_profile_id, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => item.user_profile_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => item.domain, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => item.domain, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => item.domain, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => item.time_stamp, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => item.time_stamp, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => item.time_stamp, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
        }
    }

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
